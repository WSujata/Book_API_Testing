{
	"info": {
		"_postman_id": "ab371aa2-65e2-49f8-ae4a-6fb6e98aca2f",
		"name": "Chaining Student Data",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26708283"
	},
	"item": [
		{
			"name": "Create New Student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//extract the data\r",
							"var jsonData=JSON.parse(responseBody);\r",
							"\r",
							"// capture id\r",
							"pm.environment.set(\"id\",jsonData.id);\r",
							"\r",
							"//For Status Code\r",
							"pm.test(\"Status code is 201\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"    \r",
							"//Header Validation\r",
							"pm.test(\"Content-Type header is present\", () => {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", () => {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
							"});\r",
							"\r",
							"//Response Time\r",
							"pm.test(\"response time is less than 200ms\", () => {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"/*\r",
							"pm.test(\"Status code is 201\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body contains student ID\", () => {\r",
							"    pm.response.to.have.jsonBody(\"id\");\r",
							"});\r",
							"*/"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "   {\r\n        \"name\": \"Sujata\",\r\n        \"location\": \"Mumbai\",\r\n        \"phone\": \"1234567890\",\r\n        \"courses\": [\r\n            \"OOP\",\r\n            \"SQL\"\r\n        ]\r\n    }"
				},
				"url": {
					"raw": "http://localhost:3000/Students",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"Students"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Single Students Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//For Status Code\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Header Validation\r",
							"pm.test(\"Content-Type header is present\", () => {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", () => {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
							"});\r",
							"\r",
							"//Response Time\r",
							"pm.test(\"response time is less than 200ms\", () => {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/Students/{{id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"Students",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"Status code is 204\", () => {\r",
							"//     pm.response.to.have.status(204);\r",
							"// });\r",
							"\r",
							"// //Header Validation\r",
							"// pm.test(\"Content-Type header is present\", () => {\r",
							"//     pm.response.to.have.header(\"Content-Type\");\r",
							"// });\r",
							"\r",
							"// pm.test(\"Content-Type header is application/json\", () => {\r",
							"//     pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
							"// });\r",
							"\r",
							"// //Response Time\r",
							"// pm.test(\"response time is less than 200ms\", () => {\r",
							"//     pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"// });\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/Students/{{id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"Students",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}